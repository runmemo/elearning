<?php

class CourseTestCase extends DrupalWebTestCase {
  function setUp() {
     $modules = array_merge(array('course'), func_get_args());
     parent::setUp($modules); 
    
     $settings = array(
       'type' => 'course'
     );
     $this->course = $this->drupalCreateNode($settings);
     $this->course->book['bid'] = $this->course->nid;
     node_save($this->course);
     
     $this->course_author = $this->drupalCreateUser(array('create new books', 'create book content', 'edit own book content', 'add content to books'));
    
  }
  
  function book_append_child($node, $parent) {
     $node->book['bid']= $parent->book['nid'];
     $node->book['plid'] = $parent->book['mlid'];
     node_save($node);
  }
  
   function createCourse($node_types) {
    $this->drupalLogin($this->course_author);
    $book = $this->course;
    
    $unit_settings = array(
      'type' => 'unit',
    );
    
    $i= 0;
    foreach ($node_types as $unit_key => $unit) {
      $nodes[$i] = $this->drupalCreateNode($unit_settings);
      $this->book_append_child($nodes[$i], $book);
      $u = $i; // unit key in the array
      $i++;
      
      foreach ($unit as $key => $item) {
        $item_settings = array(
          'type' => $item,
        ); 
        $nodes[$i] = $this->drupalCreateNode($item_settings);
        $this->book_append_child($nodes[$i], $nodes[$u]);
        $i ++;
      }
    }
  
    $this->drupalLogout();
    return $nodes;   
  }
}

/**
 *
 * @author Bulat Yapparov
 *
 */
class CourseNavigationTestCase extends CourseTestCase {

  protected $course;
  protected $course_author;
  protected $student;
  
  public static function getInfo() {
    return array(
      'name' => 'Course Navigation Test Case',
      'description' => 'Tests that course navigation works correctly.',
      'group' => 'Course',
    );
  }  
  
  function createTestCourse() {
   // Creating a course with the following structure:
   $course = array(
     'unit' => array (
       'lesson',
       'lesson',
     ),
     'unit' => array (
       'lesson',
       'lesson',
     ),
   );
   return $this->createCourse($course);
  }
  
  /** 
   * Checks that user is redirected to the first child node from unit page
   */
  function testUnitRedirect() {
    $nodes = $this->createTestCourse();
    $this->drupalGet('node/' . $nodes[0]->nid); // open Unit 1
    $this->assertRaw('node-type-lesson', 'User is redirected to a lesson of the unit.');  
  }
 
  function testCourseProgress()  {
    // login as student
    
    // check that progress is 0
    
    // complete 1st lesson
    
    // check that progress is correct
    
    // complete 2nd lesson
    
    // check that progress is correct
    
    // complete all lessons 
    
    // check that progress is 100
    
  }
  
  function testCourseLastVisitedItem() {
    // login as student 
    
   // go to item X of the course
    
    // go to some other page outside of the course
    
    // go to user's page
    
    // click on continue button in the list of courses
    
    // check that user is redirected to item X of the course
    
  }
  
  
}