<?php

class CourseTestCase extends DrupalWebTestCase {
  function setUp() {
     parent::setUp('course'); 
    
     $settings = array(
       'type' => 'course'
     );
     $this->course = $this->drupalCreateNode($settings);
     $this->course->book['bid'] = $this->course->nid;
     node_save($this->course);
     
     $this->course_author = $this->drupalCreateUser(array('create new books', 'create book content', 'edit own book content', 'add content to books'));
    
  }
  
}

/**
 *
 * @author Bulat Yapparov
 *
 */
class CourseNavigationTestCase extends CourseTestCase {

  protected $course;
  protected $course_author;
  protected $student;
  
  public static function getInfo() {
    return array(
      'name' => 'Course Navigation Test Case',
      'description' => 'Tests that course navigation works correctly.',
      'group' => 'Course',
    );
  }
  

  function book_append_child($node, $parent) {
     $node->book['bid']= $parent->book['nid'];
     $node->book['plid'] = $parent->book['mlid'];
     node_save($node);
  }
  
  
  function createCourse() {
    $this->drupalLogin($this->course_author);
    $book = $this->course;
    
  /*  Creating a course with the following structure:
   *
   * Course
   * --> Unit 1
   * ----> Lesson 1
   * ----> Lesson 2
   * --> Unit 2
   * ----> Lesson 3
   * ----> Lesson 4
   */
    
   $unit_settings = array(
      'type' => 'unit',
    );
    $lesson_settings = array(
      'type' => 'lesson',
    ); 
   
    // Unit 1
    $nodes[0] = $this->drupalCreateNode($unit_settings);
    $this->book_append_child($nodes[0], $book);
    $nodes[1] = $this->drupalCreateNode($lesson_settings);
    $this->book_append_child($nodes[1], $nodes[0]);
    $nodes[2] = $this->drupalCreateNode($lesson_settings);
    $this->book_append_child($nodes[2], $nodes[0]);
    // Unit 2
    $nodes[3] = $this->drupalCreateNode($unit_settings);
    $this->book_append_child($nodes[3], $book);
    $nodes[4] = $this->drupalCreateNode($lesson_settings);
    $this->book_append_child($nodes[4], $nodes[3]);
    
    $this->drupalLogout();

    return $nodes;
    
  }
  
  /** 
   * Checks that user is redirected to the first child node from unit page
   */
  function testUnitRedirect() {
    $nodes = $this->createCourse();
    $this->drupalGet('node/' . $nodes[0]->nid); // open Unit 1
    $this->assertRaw('node-type-lesson', 'User is redirected to a lesson of the unit.');  
  }
 
}