<?php

/**
 * @file
 * Provides functionality to Best Answer selecting process.
 */

/**
 * Implements hook_node_view().
 */
function best_answer_extra_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'question' && $view_mode == 'full') {
    drupal_add_js(drupal_get_path('module', 'best_answer_extra') . '/best_answer_extra.js');
  }
}

/**
 * Implements hook_flag_flag().
 *
 * Fires on flag event to control that there is only one best answer per question.
 * TODO: Create test for this hook to ensure that when flagged an answer as best the rest of 
 * answers are unflagged and the answers of other questions remain flagged (at least one answer flagged)
 */
function best_answer_extra_flag_flag($flag, $entity_id, $account, $flagging) {
 
  if ($flag->name == "best_answer") {
    $question = entity_metadata_wrapper('node', $entity_id)->field_answer_question->value();
    
    $query = new EntityFieldQuery();
    $entities = $query
      ->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'answer')
      ->propertyCondition('nid', $entity_id, '<>')
      ->fieldCondition('field_answer_question', 'nid', $question->nid, '=')
      ->execute();
    
    foreach ($entities as $type => $answers) {
      foreach ($answers as $nid => $answer) {
        if ($flag->is_flagged($nid)) {
          $flag->flag('unflag', $nid);
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_flag().
 * 
 * Remove flag link if user is not an author of the question.
 */
function best_answer_extra_preprocess_flag(&$vars) {
  $flag = $vars['flag'];
  if ($flag->name == 'best_answer') {
    $nid = $vars['entity_id'];
    $question = entity_metadata_wrapper('node', $nid)->field_answer_question->value();
    if ($question && $question->uid != $vars['user']->uid) {
      // don't allow other users to mark answers as best.
      $vars['link_href'] = FALSE;
      $is_flagged = $flag->is_flagged($nid, $question->uid);
      $vars['flag_classes'] .= $is_flagged ? ' best-answer-marked' : ' best-answer-hidden';
    }
  }
}
