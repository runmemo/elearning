<?php

/**
 * @file 
 * quiz_extra.module
 */

include_once 'quiz_extra.features.inc';

/**
 * Implements hook_menu_alter().
 * @param type $items
 */
function quiz_extra_menu_alter(&$items) {
  $items['node/%node/take']['page callback'] = 'quiz_take_extra';  
}

/**
 * Primary quiz-taking view on 'Take' tab.
 */
function quiz_take_extra($node) {

  drupal_add_js(drupal_get_path('module', 'quiz_extra') . '/quiz_extra.js');

  //drupal_alter('quiz_take', $node);
  if (isset($node->rendered_content)) {
    return $node->rendered_content;
  }
  $to_be_rendered = quiz_take_quiz($node);
  if(!empty($_SESSION['quiz_' . $node->nid])) { // we are not on result page
    // add customized stats.
    $to_be_rendered['stats'] = array(
      '#markup' => theme('quiz_stats', array('node' => $node)),
      '#weight' => 1,
    );
  }

  // alter the weight for progress provided by quiz.module.
  $to_be_rendered['progress']['#weight'] = 2;

  return drupal_render($to_be_rendered);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function quiz_extra_form_quiz_question_answering_form_alter(&$form, &$form_state) {
  unset($form['tries[answer]']['#title']);
}

/**
 * Implements hook_theme().
 */
function quiz_extra_theme($existing, $type, $theme, $path) {
  return array(
    'quiz_stats' => array(
      'variables' => array('node' => NULL),
      'template' => 'quiz-stats',
    ),
  );
}

/**
 * Theme the stats on the views page
 *
 * @param $node
 *   The quiz node
 */
function template_preprocess_quiz_stats(&$vars) {
  $node = $vars['node'];
  if ($node->show_attempt_stats) {
    $takes = $node->takes == 0 ? t('Unlimited') : $node->takes;
    $stats[] = array(
      'title' => t('Attempts'),
      'data' => $takes,
    );
  }
  if (!empty($node->pass_rate)) {
    $stats[] = array(
      'title' => t('Pass rate'),
      'data' => $node->pass_rate . ' %',
    );
  }

  $vars['stats'] = $stats;
}

/**  
 * Implements hook_theme_registry_alter  
 */ 
function quiz_extra_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['quiz_take_summary']['function'])) { 
    $theme_registry['quiz_take_summary']['function'] = 'quiz_extra_quiz_take_summary';
  }
}

function quiz_extra_quiz_take_summary($variables) {
  $quiz = $variables['quiz'];
  $questions = $variables['questions'];
  $score = $variables['score'];
  $summary = $variables['summary'];
  $rid =  $variables['rid'];
  // Set the title here so themers can adjust.
  drupal_set_title($quiz->title);

  // Display overall result.
  $output = '';
  if (!empty($score['possible_score'])) {
    if (!$score['is_evaluated']) {
      if (user_access('score taken quiz answer')) {
        $msg = t('Parts of this @quiz have not been evaluated yet. The score below is not final. <a class="self-score" href="!result_url">Click here</a> to give scores on your own.', array('@quiz' => QUIZ_NAME, '!result_url' => url('node/' . $quiz->nid . '/results/' . $rid)));
      }
      else {
        $msg = t('Parts of this @quiz have not been evaluated yet. The score below is not final.', array('@quiz' => QUIZ_NAME));
      }
      drupal_set_message($msg, 'warning');
    }
    $output .= '<div id="quiz_score_possible">';

    $output .= '<span class="title">';
    $output .= t('Test Result');
    $output .= '</span>';

    $output .= '<div class="summary">';
    $output .= '<span class="correct">';
    $output .= t('Correct: %num_correct', array('%num_correct' => $score['numeric_score']));
    $output .= '</span>';
    $output .= ' / ';
    $output .= '<span class="wrong">';
    $output .= t('Wrong: %num_wrong', array('%num_wrong' => $score['possible_score'] - $score['numeric_score']));
    $output .= '</span>';
    $output .= '</div>';

    $output .= '</div>';

  }
  if (isset($summary['passfail'])) {
    $output .= '<div id="quiz_summary">' . $summary['passfail'] . '</div>' . "\n";
  }
  if (isset($summary['result'])) {
    $output .= '<div id="quiz_summary">' . $summary['result'] . '</div>' . "\n";
  }
  // Get the feedback for all questions. These are included here to provide maximum flexibility for themers
  if ($quiz->display_feedback) {
    $form = drupal_get_form('quiz_report_form', $questions);
    $output .= drupal_render($form);
  }
  return $output;
}
