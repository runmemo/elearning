<?php

/**
 * @file
 * credit.module
 */


function credit_hook_info() {
  $hooks['credit_info'] = array(
    'group' => 'credit',
  );
  return $hooks;
}

// @todo validation should check other objects with weight and limit it with total credits on course
// @todo total credits - on course content type 

/**
 * Calculates credit attributed to a student for a given course.
 * 
 * @param type $course
 * 
 * @param type $account
 * 
 * @return integer 
 *   Number of points credited to a student for provided course.
 */
function credit_calculate($course, $account) {
  if ($course->type !== 'course') {
    return FALSE; // only works for course level
  }
  // loop through all items of the course
  $course_items = course_get_items($course);
  $credit = .0;
  foreach ($course_items as $nid => $type) {
    $item = node_load($nid);
    $result = credit_get_item_result($item, $account);
    $weight = credit_get_field_integer_value($item, 'field_course_credit');
    
    $credit += $result * $weight;
  }
  
  return $credit;
}
/**
 * Gets result of the provided course item
 * @param object $node item of the course
 * @param object $account user's account
 * @param 
 */
function credit_get_item_result($node, $account) {
  foreach (module_implements('credit_info') as $module) {
    $module_results = module_invoke($module, 'credit_info');
    foreach ($module_results as $result) {
      if ($result['bundle'] === $node->type) {  
        $function = $result['result_callback'];
        if (function_exists($function)) {
          $result = $function($node, $account);
          return $result;
        }
      }
    }
  }
  
  return 0.0; // node does not provide calculation of result for credit
}

/**
 * Gets first value from integer field of the node.
 * 
 * @param object $node
 * 
 * @param string $field 
 *   Machine readable name of field.
 * 
 * @param integer $default 
 *   Value to return if field is empty.
 * 
 * @return int 
 *   First value from the field if exists, otherwise $default.
 */
function credit_get_field_integer_value($node, $field, $default = 0) {
  $credits = field_get_items('node', $node, $field);
  if ($credits) {
    return $credits[0]['value'];
  }
  return $default;
}

