<?php

/**
 * @file
 *
 * Test cases for the answers_extra module.
 */

/**
 * Base class for answers_extra tests.
 */
class AnswersExtraBaseCase extends DrupalWebTestCase {
  protected $visitor;
  protected $author;
  protected $node;
  function setUp() {
    parent::setUp('answers_extra', 'vud');
  }
}

/**
 * Tests checks install of answers_extra module.
 */
class AnswersExtraCase extends AnswersExtraBaseCase {

  public static function getInfo() {
    return array(
      'name' => 'Answers Extra Test',
      'description' => 'Test to check answers_extra module setup',
      'group' => 'Answers',
    );
  }

  function setUp() {
    parent::setUp();
    $this->visitor = $this->drupalCreateUser(array('use vote up/down', ));
    $this->author = $this->drupalCreateUser(array('create question content'));

  }

  function testVotingAccess() {

    $settings = array(
      'uid' => $this->author->uid,
      'type' => 'question',
    );
    $this->node = $this->drupalCreateNode($settings);

    // Open question's page without logging in.
    $this->drupalGet('node/' . $this->node->nid);
    $this->assertRaw('vud-widget-inactive');
    $this->assertRaw('Please login to vote up this item');
    $this->assertRaw('Please login to vote down this item');
    // Open question's page as an author of the question.
    $this->drupalLogin($this->author);
    $this->drupalGet('node/' . $this->node->nid);
    $this->assertRaw('vud-widget-inactive');
    $this->assertRaw('You cannot vote up your own question');
    $this->assertRaw('You cannot vote down your own question');
    // Open question's page as a registered visitor.
    $this->drupalLogin($this->visitor);
    $this->drupalGet('node/' . $this->node->nid);
    $this->assertNoRaw('vud-widget-inactive');
    $this->assertRaw('Vote up!');
    $this->assertRaw('Vote down!');

    module_enable(array('userpoints', ));
    variable_set('answers_extra_rate_points', 10);
    // Check that user without points is not able to vote.
    $this->drupalGet('node/' . $this->node->nid);
    $this->assertRaw('vud-widget-inactive');
    $this->assertRaw('You need to have 10 points');

    // Add enough points for user to vote and check whether he can vote.
    $points_params = array(
      'uid' => $this->visitor->uid,
      'points' => 20,
    );
    userpoints_userpointsapi($points_params);
    $this->drupalGet('node/' . $this->node->nid);
    $this->assertNoRaw('vud-widget-inactive');
    $this->assertRaw('Vote up!');
    $this->assertRaw('Vote down!');
  }

}

