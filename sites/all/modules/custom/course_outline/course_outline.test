<?php

/**
 * Tests functions that help to work with course items and course structure.
 */
class CourseOutlineTestCase extends CourseTestCase {
 
  public static function getInfo() {
    return array(
      'name' => 'Course Outline Test Case',
      'description' => 'Unit Tests for course outline module.',
      'group' => 'Course',
    );
  }
  
  function setUp() {
    parent::setUp('course_outline'); 
    $this->nodes = $this->populateTestCourse($this->course); 
  }
  
   /**
   * Creates course structure for provided course.
   * 
   * @param object $course
   * 
   * @return array of nodes
   */
  function populateTestCourse($course = NULL) {
    if (!isset($course)) {
      $course = $this->course;
    }
    // Creating a course with the following structure:
    $outline = array(
      'unit1' => array(       // 0 
        'item1' => 'page',    // 1
        'item2' => 'article', // 2
        'item3' => 'article', // 3
      ),
      'unit2' => array(       // 4
        'item4' => 'page',    // 5
        'item5' => 'article', // 6
        'item6' => 'page',    // 7
        'item7' => 'page',    // 8
      ),
    );
    return $this->populateCourse($course, $outline);
  }

  
  /**
   * Tests that outline_index attibute of the node is populated and correct
   * on noad_load if node is part of the book.
   * 
   * @see course_get_items
   * @see _course_get_tree_items
   */
  function testOulineNodeLoad() {
    
    $node = node_load($this->nodes[1]->nid, NULL, TRUE);
    $this->assertEqual(1, $node->outline_index, 'Outline index of first page is 1');
    $node = node_load($this->nodes[8]->nid, NULL, TRUE);
    $this->assertEqual(4, $node->outline_index, 'Outline index of last page is 4');
    $node = node_load($this->nodes[3]->nid, NULL, TRUE);
    $this->assertEqual(2, $node->outline_index, 'Outline index of second article is 2');
    
  }
  
}
