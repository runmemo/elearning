<?php

/**
 * Implements hook_ctools_plugin_api().
 */
function lesson_questions_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "context" && $api == "context") {
    return array("version" => "3");
  }
  list($module, $api) = func_get_args();
  if ($module == "strongarm" && $api == "strongarm") { 
    return array("version" => "1");
  }
}

/**
 * Implements hook_views_api().
 */
function lesson_questions_views_api() {
  return array(
    'api' => '3.0',
    'path' => drupal_get_path('module', 'lesson_questions') . '/views',);
}

/**
 * Implements hook_init().
 */
function lesson_questions_init() {
  drupal_add_js(drupal_get_path('module', 'lesson_questions') . '/lesson_questions.js');
}

/**
 * Implements hook_block_info()
 */
function lesson_questions_block_info() {
  $block['lesson_questions'] = array(
    'info' => 'Lesson Questions',
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $block;
}

/**
 * Implementation of hook_block_view()
 */
function lesson_questions_block_view($delta = '') {  
  $block = array();
  switch($delta) {
    case 'lesson_questions':
      $content = array();
      // Question form
      $content['question_form'] = drupal_get_form('quick_question');
      //Placeholder for message. 
      $content['message_placeholder'] = array(
        '#type' => 'markup',
        '#markup' => '<div id="message-placeholder"></div>',
      );
      // Embed view 
      $content['questions_list'] = array(
        '#type' => 'markup',
        '#markup' => _get_relevant_questions_list(),
      );
      // Build the block title and contents
      $block['subject'] = '';
      $block['content'] = $content;
      break;
  }
  return $block;
}


/**
 * Callback function : Defines form for quick question for lesson page.
 */
function quick_answer($form, &$form_state) {
  if (!user_access('create answer content')) {
    return;
  }


  
  $form['quick_answer'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#prefix' => '<div id="quick-answer-wrapper">',
    '#suffix' => '</div>',
    '#title' => t('Give Answer')
  );

  if(isset($form_state['values']['question'])) {
    $question_nid = $form_state['values']['question'];
  }
  else {
    $question_node = menu_get_object('node');
    if(!$question_node || $question_node->type <> 'question') {
      return;
    }
    $question_nid = $question_node->nid;
  }

  $question = menu_get_object('node');
  $form['quick_answer']['question'] = array(
    '#type' => 'hidden',
    '#value' => $question_nid
  );

  $form['quick_answer']['answer'] = array(
    '#type' => 'text_format',
    '#format' => 'filtered_html',
    '#attributes' => array('placeholder' => t('Answer')),
    '#rows' => 3,
    '#cols' => 73,
  );

  $form['quick_answer']['submit'] = array(
    '#type' => 'submit',
    '#ajax' => array(
      'callback' => 'quick_answer_submit_callback',
      'wrapper' => 'quick-answer-wrapper',
    ),
    '#value' => t('Save'),
  );
  return $form;
}

/**
 * Helper Function : Returns status message to user after creating question.
 */
function _get_completion_text($message = NULL) {
  if (!$message) {
    $message = t('Your message was added to the list below.');
  }
  return '<div id="message-placeholder"><div class="text">' . $message . '<span class="close" title="close">X</span></div></div>';
}

/**
* Helper Function : Returns embeded view on lesson page.
*/
function _get_relevant_questions_list($path = NULL) {
  if(!$path) {
    $path = implode('/', arg());
  }
  return views_embed_view('relevant_questions_list', 'block', $path);
}
